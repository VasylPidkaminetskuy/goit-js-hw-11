{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport function getImagesByQuery(query) {\n  return axios\n    .get('https://pixabay.com/api/', {\n      params: {\n        key: '51801427-6d1e83aadfb04e423248c71b3',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n        per_page: 18,\n      },\n    })\n    .then(res => res.data.hits);\n}\n\n\n\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { loader, galleryList } from '../main';\n\nlet lightbox = null;\n\nexport function createLightbox() {\n  if (lightbox) {\n    lightbox.refresh();\n  } else {\n    lightbox = new SimpleLightbox('.gallery a', {\n      captions: true,\n      captionsData: 'alt',\n      captionPosition: 'bottom',\n      captionDelay: 250,\n    });\n  }\n}\n\n\nexport function renderGallery(images) {\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<li class=\"gallery-item\">\n            <a class=\"gallery-item-link\" href=\"${largeImageURL}\">\n              <img class=\"gallery-item-img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n            </a>\n            <div class=\"gallery-description-container\">\n              <div class=\"gallery-img-info\">\n                <h5>Likes</h5>\n                <p>${likes}</p>\n              </div>\n              <div class=\"gallery-img-info\">\n                <h5>Views</h5>\n                <p>${views}</p>\n              </div>\n              <div class=\"gallery-img-info\">\n                <h5>Comments</h5>\n                <p>${comments}</p>\n              </div>\n              <div class=\"gallery-img-info\">\n                <h5>Downloads</h5>\n                <p>${downloads}</p>\n              </div>\n            </div>\n          </li>`;\n      }\n    )\n    .join('');\n\n  galleryList.innerHTML = markup;\n  createLightbox(); \n}\n\nexport function clearGallery() {\n  galleryList.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.remove('hidden')\n}\n\nexport function hideLoader() {\n  loader.classList.add('hidden');\n}\n","import { getImagesByQuery } from './js/pixabay-api';\nimport {\n  clearGallery,\n  hideLoader,\n  renderGallery,\n  showLoader,\n} from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst refs = {\n  form: document.querySelector('.form'),\n  buttonInput: document.querySelector('.js-button-search'),\n  inputSearch: document.querySelector('.js-input-search'),\n  galleryList: document.querySelector('.gallery'),\n  loader: document.querySelector('.js-loader'),\n};\n\nexport const { form, buttonInput, inputSearch, galleryList, loader } = refs;\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  showLoader();\n\n  const usersSearchValue = e.target.elements['search-text'].value.trim();\n\n  if (!usersSearchValue) {\n    hideLoader();\n    iziToast.show({\n      message: 'Введіть текст для пошуку',\n      position: 'topRight',\n      backgroundColor: '#e74c3c',\n      messageColor: '#fff',\n    });\n    return;\n  }\n\n  clearGallery();\n\n  getImagesByQuery(usersSearchValue)\n    .then(images => {\n      if (!images.length) {\n        iziToast.show({\n          message: `За запитом \"${usersSearchValue}\" не знайдено жодного результату.`,\n          position: 'topRight',\n          backgroundColor: '#e74c3c',\n          messageColor: '#fff',\n        });\n        return;\n      }\n      renderGallery(images);\n    })\n    .catch(error => {\n      iziToast.error({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!error',\n        backgroundColor: '#e74c3c',\n        messageColor: '#fff',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n    });\n\n  form.reset();\n});\n"],"names":["getImagesByQuery","query","axios","res","lightbox","createLightbox","SimpleLightbox","renderGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","galleryList","clearGallery","showLoader","loader","hideLoader","refs","form","buttonInput","inputSearch","e","usersSearchValue","iziToast","error"],"mappings":"owBAEO,SAASA,EAAiBC,EAAO,CACtC,OAAOC,EACJ,IAAI,2BAA4B,CAC/B,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,EACX,CACP,CAAK,EACA,KAAKE,GAAOA,EAAI,KAAK,IAAI,CAC9B,CCXA,IAAIC,EAAW,KAER,SAASC,GAAiB,CAC3BD,EACFA,EAAS,QAAO,EAEhBA,EAAW,IAAIE,EAAe,aAAc,CAC1C,SAAU,GACV,aAAc,MACd,gBAAiB,SACjB,aAAc,GACpB,CAAK,CAEL,CAGO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,iDACkCL,CAAa;AAAA,mDACXD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKxDC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qBAIRC,CAAS;AAAA;AAAA;AAAA,gBAKzB,EACA,KAAK,EAAE,EAEVC,EAAY,UAAYR,EACxBJ,GACF,CAEO,SAASa,GAAe,CAC7BD,EAAY,UAAY,EAC1B,CAEO,SAASE,GAAa,CAC3BC,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASC,GAAa,CAC3BD,EAAO,UAAU,IAAI,QAAQ,CAC/B,CChEA,MAAME,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,YAAa,SAAS,cAAc,mBAAmB,EACvD,YAAa,SAAS,cAAc,kBAAkB,EACtD,YAAa,SAAS,cAAc,UAAU,EAC9C,OAAQ,SAAS,cAAc,YAAY,CAC7C,EAEa,CAAE,KAAAC,EAAM,YAAAC,EAAa,YAAAC,EAAa,YAAAR,EAAa,OAAAG,CAAQ,EAAGE,EAEvEC,EAAK,iBAAiB,SAAUG,GAAK,CACnCA,EAAE,eAAc,EAChBP,IAEA,MAAMQ,EAAmBD,EAAE,OAAO,SAAS,aAAa,EAAE,MAAM,OAEhE,GAAI,CAACC,EAAkB,CACrBN,IACAO,EAAS,KAAK,CACZ,QAAS,2BACT,SAAU,WACV,gBAAiB,UACjB,aAAc,MACpB,CAAK,EACD,MACD,CAEDV,IAEAlB,EAAiB2B,CAAgB,EAC9B,KAAKnB,GAAU,CACd,GAAI,CAACA,EAAO,OAAQ,CAClBoB,EAAS,KAAK,CACZ,QAAS,eAAeD,CAAgB,oCACxC,SAAU,WACV,gBAAiB,UACjB,aAAc,MACxB,CAAS,EACD,MACD,CACDpB,EAAcC,CAAM,CAC1B,CAAK,EACA,MAAMqB,GAAS,CACdD,EAAS,MAAM,CACb,QACE,gFACF,gBAAiB,UACjB,aAAc,MACtB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbP,GACN,CAAK,EAEHE,EAAK,MAAK,CACZ,CAAC"}